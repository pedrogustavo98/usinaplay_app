{"ast":null,"code":"import _defineProperty from \"C:/Users/User/Documents/GitHub/usinaplay_app/app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _FirestoreModule;\nimport { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵzoneWrap } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { collectionChanges as collectionChanges$1, collection as collection$1, sortedChanges as sortedChanges$1, auditTrail as auditTrail$1, collectionData as collectionData$1, collectionCountSnap as collectionCountSnap$1, collectionCount as collectionCount$1, doc as doc$1, docData as docData$1, snapToData as snapToData$1, fromRef as fromRef$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, arrayRemove as arrayRemove$1, arrayUnion as arrayUnion$1, average as average$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, count as count$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, memoryEagerGarbageCollector as memoryEagerGarbageCollector$1, memoryLocalCache as memoryLocalCache$1, memoryLruGarbageCollector as memoryLruGarbageCollector$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, persistentLocalCache as persistentLocalCache$1, persistentMultipleTabManager as persistentMultipleTabManager$1, persistentSingleTabManager as persistentSingleTabManager$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, serverTimestamp as serverTimestamp$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\nclass Firestore {\n  constructor(firestore) {\n    return firestore;\n  }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n  }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n  const defaultFirestore = ɵgetDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n  return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n  return (zone, injector) => {\n    const firestore = zone.runOutsideAngular(() => fn(injector));\n    return new Firestore(firestore);\n  };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n  provide: FirestoreInstances,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES]]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n  provide: Firestore,\n  useFactory: defaultFirestoreInstanceFactory,\n  deps: [[new Optional(), PROVIDED_FIRESTORE_INSTANCES], FirebaseApp]\n};\nclass FirestoreModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'fst');\n  }\n}\n_FirestoreModule = FirestoreModule;\n_defineProperty(FirestoreModule, \"\\u0275fac\", function _FirestoreModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _FirestoreModule)();\n});\n_defineProperty(FirestoreModule, \"\\u0275mod\", /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: _FirestoreModule\n}));\n_defineProperty(FirestoreModule, \"\\u0275inj\", /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n}));\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FirestoreModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_FIRESTORE_INSTANCE_PROVIDER, FIRESTORE_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideFirestore(fn, ...deps) {\n  return {\n    ngModule: FirestoreModule,\n    providers: [{\n      provide: PROVIDED_FIRESTORE_INSTANCES,\n      useFactory: firestoreInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps,\n      // Firestore+Auth work better if Auth is loaded first\n      [new Optional(), AuthInstances], [new Optional(), ɵAppCheckInstances], ...deps]\n    }]\n  };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst collectionChanges = ɵzoneWrap(collectionChanges$1, true);\nconst collectionSnapshots = ɵzoneWrap(collection$1, true);\nconst sortedChanges = ɵzoneWrap(sortedChanges$1, true);\nconst auditTrail = ɵzoneWrap(auditTrail$1, true);\nconst collectionData = ɵzoneWrap(collectionData$1, true);\nconst collectionCountSnap = ɵzoneWrap(collectionCountSnap$1, true);\nconst collectionCount = ɵzoneWrap(collectionCount$1, true);\nconst docSnapshots = ɵzoneWrap(doc$1, true);\nconst docData = ɵzoneWrap(docData$1, true);\nconst snapToData = ɵzoneWrap(snapToData$1, true);\nconst fromRef = ɵzoneWrap(fromRef$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = ɵzoneWrap(addDoc$1, true);\nconst aggregateFieldEqual = ɵzoneWrap(aggregateFieldEqual$1, true);\nconst aggregateQuerySnapshotEqual = ɵzoneWrap(aggregateQuerySnapshotEqual$1, true);\nconst and = ɵzoneWrap(and$1, true);\nconst arrayRemove = ɵzoneWrap(arrayRemove$1, true);\nconst arrayUnion = ɵzoneWrap(arrayUnion$1, true);\nconst average = ɵzoneWrap(average$1, true);\nconst clearIndexedDbPersistence = ɵzoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = ɵzoneWrap(collection$2, true);\nconst collectionGroup = ɵzoneWrap(collectionGroup$1, true);\nconst connectFirestoreEmulator = ɵzoneWrap(connectFirestoreEmulator$1, true);\nconst count = ɵzoneWrap(count$1, true);\nconst deleteAllPersistentCacheIndexes = ɵzoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = ɵzoneWrap(deleteDoc$1, true);\nconst deleteField = ɵzoneWrap(deleteField$1, true);\nconst disableNetwork = ɵzoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = ɵzoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = ɵzoneWrap(doc$2, true);\nconst documentId = ɵzoneWrap(documentId$1, true);\nconst enableIndexedDbPersistence = ɵzoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = ɵzoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = ɵzoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = ɵzoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = ɵzoneWrap(endAt$1, true);\nconst endBefore = ɵzoneWrap(endBefore$1, true);\nconst getAggregateFromServer = ɵzoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = ɵzoneWrap(getCountFromServer$1, true);\nconst getDoc = ɵzoneWrap(getDoc$1, true);\nconst getDocFromCache = ɵzoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = ɵzoneWrap(getDocFromServer$1, true);\nconst getDocs = ɵzoneWrap(getDocs$1, true);\nconst getDocsFromCache = ɵzoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = ɵzoneWrap(getDocsFromServer$1, true);\nconst getFirestore = ɵzoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = ɵzoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = ɵzoneWrap(increment$1, true);\nconst initializeFirestore = ɵzoneWrap(initializeFirestore$1, true);\nconst limit = ɵzoneWrap(limit$1, true);\nconst limitToLast = ɵzoneWrap(limitToLast$1, true);\nconst loadBundle = ɵzoneWrap(loadBundle$1, true);\nconst memoryEagerGarbageCollector = ɵzoneWrap(memoryEagerGarbageCollector$1, true);\nconst memoryLocalCache = ɵzoneWrap(memoryLocalCache$1, true);\nconst memoryLruGarbageCollector = ɵzoneWrap(memoryLruGarbageCollector$1, true);\nconst namedQuery = ɵzoneWrap(namedQuery$1, true);\nconst onSnapshot = ɵzoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = ɵzoneWrap(onSnapshotsInSync$1, true);\nconst or = ɵzoneWrap(or$1, true);\nconst orderBy = ɵzoneWrap(orderBy$1, true);\nconst persistentLocalCache = ɵzoneWrap(persistentLocalCache$1, true);\nconst persistentMultipleTabManager = ɵzoneWrap(persistentMultipleTabManager$1, true);\nconst persistentSingleTabManager = ɵzoneWrap(persistentSingleTabManager$1, true);\nconst query = ɵzoneWrap(query$1, true);\nconst queryEqual = ɵzoneWrap(queryEqual$1, true);\nconst refEqual = ɵzoneWrap(refEqual$1, true);\nconst runTransaction = ɵzoneWrap(runTransaction$1, true);\nconst serverTimestamp = ɵzoneWrap(serverTimestamp$1, true);\nconst setDoc = ɵzoneWrap(setDoc$1, true);\nconst setIndexConfiguration = ɵzoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\nconst snapshotEqual = ɵzoneWrap(snapshotEqual$1, true);\nconst startAfter = ɵzoneWrap(startAfter$1, true);\nconst startAt = ɵzoneWrap(startAt$1, true);\nconst sum = ɵzoneWrap(sum$1, true);\nconst terminate = ɵzoneWrap(terminate$1, true);\nconst updateDoc = ɵzoneWrap(updateDoc$1, true);\nconst waitForPendingWrites = ɵzoneWrap(waitForPendingWrites$1, true);\nconst where = ɵzoneWrap(where$1, true);\nconst writeBatch = ɵzoneWrap(writeBatch$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, auditTrail, average, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, count, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, memoryEagerGarbageCollector, memoryLocalCache, memoryLruGarbageCollector, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, persistentLocalCache, persistentMultipleTabManager, persistentSingleTabManager, provideFirestore, query, queryEqual, refEqual, runTransaction, serverTimestamp, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, waitForPendingWrites, where, writeBatch };","map":{"version":3,"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","VERSION","ɵAngularFireSchedulers","ɵAppCheckInstances","ɵzoneWrap","from","timer","concatMap","distinct","i0","InjectionToken","Optional","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","AuthInstances","registerVersion","collectionChanges","collectionChanges$1","collection","collection$1","sortedChanges","sortedChanges$1","auditTrail","auditTrail$1","collectionData","collectionData$1","collectionCountSnap","collectionCountSnap$1","collectionCount","collectionCount$1","doc","doc$1","docData","docData$1","snapToData","snapToData$1","fromRef","fromRef$1","addDoc","addDoc$1","aggregateFieldEqual","aggregateFieldEqual$1","aggregateQuerySnapshotEqual","aggregateQuerySnapshotEqual$1","and","and$1","arrayRemove","arrayRemove$1","arrayUnion","arrayUnion$1","average","average$1","clearIndexedDbPersistence","clearIndexedDbPersistence$1","collection$2","collectionGroup","collectionGroup$1","connectFirestoreEmulator","connectFirestoreEmulator$1","count","count$1","deleteAllPersistentCacheIndexes","deleteAllPersistentCacheIndexes$1","deleteDoc","deleteDoc$1","deleteField","deleteField$1","disableNetwork","disableNetwork$1","disablePersistentCacheIndexAutoCreation","disablePersistentCacheIndexAutoCreation$1","doc$2","documentId","documentId$1","enableIndexedDbPersistence","enableIndexedDbPersistence$1","enableMultiTabIndexedDbPersistence","enableMultiTabIndexedDbPersistence$1","enableNetwork","enableNetwork$1","enablePersistentCacheIndexAutoCreation","enablePersistentCacheIndexAutoCreation$1","endAt","endAt$1","endBefore","endBefore$1","getAggregateFromServer","getAggregateFromServer$1","getCountFromServer","getCountFromServer$1","getDoc","getDoc$1","getDocFromCache","getDocFromCache$1","getDocFromServer","getDocFromServer$1","getDocs","getDocs$1","getDocsFromCache","getDocsFromCache$1","getDocsFromServer","getDocsFromServer$1","getFirestore","getFirestore$1","getPersistentCacheIndexManager","getPersistentCacheIndexManager$1","increment","increment$1","initializeFirestore","initializeFirestore$1","limit","limit$1","limitToLast","limitToLast$1","loadBundle","loadBundle$1","memoryEagerGarbageCollector","memoryEagerGarbageCollector$1","memoryLocalCache","memoryLocalCache$1","memoryLruGarbageCollector","memoryLruGarbageCollector$1","namedQuery","namedQuery$1","onSnapshot","onSnapshot$1","onSnapshotsInSync","onSnapshotsInSync$1","or","or$1","orderBy","orderBy$1","persistentLocalCache","persistentLocalCache$1","persistentMultipleTabManager","persistentMultipleTabManager$1","persistentSingleTabManager","persistentSingleTabManager$1","query","query$1","queryEqual","queryEqual$1","refEqual","refEqual$1","runTransaction","runTransaction$1","serverTimestamp","serverTimestamp$1","setDoc","setDoc$1","setIndexConfiguration","setIndexConfiguration$1","setLogLevel","setLogLevel$1","snapshotEqual","snapshotEqual$1","startAfter","startAfter$1","startAt","startAt$1","sum","sum$1","terminate","terminate$1","updateDoc","updateDoc$1","waitForPendingWrites","waitForPendingWrites$1","where","where$1","writeBatch","writeBatch$1","Firestore","constructor","firestore","FIRESTORE_PROVIDER_NAME","FirestoreInstances","firestoreInstance$","pipe","PROVIDED_FIRESTORE_INSTANCES","defaultFirestoreInstanceFactory","provided","defaultApp","defaultFirestore","firestoreInstanceFactory","fn","zone","injector","runOutsideAngular","FIRESTORE_INSTANCES_PROVIDER","provide","deps","DEFAULT_FIRESTORE_INSTANCE_PROVIDER","useFactory","FirestoreModule","full","_FirestoreModule","_defineProperty","_FirestoreModule_Factory","__ngFactoryType__","ɵɵdefineNgModule","type","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","provideFirestore","ngModule","multi","collectionSnapshots","docSnapshots"],"sources":["C:/Users/User/Documents/GitHub/usinaplay_app/app/node_modules/@angular/fire/fesm2022/angular-fire-firestore.mjs"],"sourcesContent":["import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵzoneWrap } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { collectionChanges as collectionChanges$1, collection as collection$1, sortedChanges as sortedChanges$1, auditTrail as auditTrail$1, collectionData as collectionData$1, collectionCountSnap as collectionCountSnap$1, collectionCount as collectionCount$1, doc as doc$1, docData as docData$1, snapToData as snapToData$1, fromRef as fromRef$1 } from 'rxfire/firestore';\nimport { addDoc as addDoc$1, aggregateFieldEqual as aggregateFieldEqual$1, aggregateQuerySnapshotEqual as aggregateQuerySnapshotEqual$1, and as and$1, arrayRemove as arrayRemove$1, arrayUnion as arrayUnion$1, average as average$1, clearIndexedDbPersistence as clearIndexedDbPersistence$1, collection as collection$2, collectionGroup as collectionGroup$1, connectFirestoreEmulator as connectFirestoreEmulator$1, count as count$1, deleteAllPersistentCacheIndexes as deleteAllPersistentCacheIndexes$1, deleteDoc as deleteDoc$1, deleteField as deleteField$1, disableNetwork as disableNetwork$1, disablePersistentCacheIndexAutoCreation as disablePersistentCacheIndexAutoCreation$1, doc as doc$2, documentId as documentId$1, enableIndexedDbPersistence as enableIndexedDbPersistence$1, enableMultiTabIndexedDbPersistence as enableMultiTabIndexedDbPersistence$1, enableNetwork as enableNetwork$1, enablePersistentCacheIndexAutoCreation as enablePersistentCacheIndexAutoCreation$1, endAt as endAt$1, endBefore as endBefore$1, getAggregateFromServer as getAggregateFromServer$1, getCountFromServer as getCountFromServer$1, getDoc as getDoc$1, getDocFromCache as getDocFromCache$1, getDocFromServer as getDocFromServer$1, getDocs as getDocs$1, getDocsFromCache as getDocsFromCache$1, getDocsFromServer as getDocsFromServer$1, getFirestore as getFirestore$1, getPersistentCacheIndexManager as getPersistentCacheIndexManager$1, increment as increment$1, initializeFirestore as initializeFirestore$1, limit as limit$1, limitToLast as limitToLast$1, loadBundle as loadBundle$1, memoryEagerGarbageCollector as memoryEagerGarbageCollector$1, memoryLocalCache as memoryLocalCache$1, memoryLruGarbageCollector as memoryLruGarbageCollector$1, namedQuery as namedQuery$1, onSnapshot as onSnapshot$1, onSnapshotsInSync as onSnapshotsInSync$1, or as or$1, orderBy as orderBy$1, persistentLocalCache as persistentLocalCache$1, persistentMultipleTabManager as persistentMultipleTabManager$1, persistentSingleTabManager as persistentSingleTabManager$1, query as query$1, queryEqual as queryEqual$1, refEqual as refEqual$1, runTransaction as runTransaction$1, serverTimestamp as serverTimestamp$1, setDoc as setDoc$1, setIndexConfiguration as setIndexConfiguration$1, setLogLevel as setLogLevel$1, snapshotEqual as snapshotEqual$1, startAfter as startAfter$1, startAt as startAt$1, sum as sum$1, terminate as terminate$1, updateDoc as updateDoc$1, waitForPendingWrites as waitForPendingWrites$1, where as where$1, writeBatch as writeBatch$1 } from 'firebase/firestore';\nexport * from 'firebase/firestore';\n\nclass Firestore {\n    constructor(firestore) {\n        return firestore;\n    }\n}\nconst FIRESTORE_PROVIDER_NAME = 'firestore';\nclass FirestoreInstances {\n    constructor() {\n        return ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME);\n    }\n}\nconst firestoreInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(FIRESTORE_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_FIRESTORE_INSTANCES = new InjectionToken('angularfire2.firestore-instances');\nfunction defaultFirestoreInstanceFactory(provided, defaultApp) {\n    const defaultFirestore = ɵgetDefaultInstanceOf(FIRESTORE_PROVIDER_NAME, provided, defaultApp);\n    return defaultFirestore && new Firestore(defaultFirestore);\n}\nfunction firestoreInstanceFactory(fn) {\n    return (zone, injector) => {\n        const firestore = zone.runOutsideAngular(() => fn(injector));\n        return new Firestore(firestore);\n    };\n}\nconst FIRESTORE_INSTANCES_PROVIDER = {\n    provide: FirestoreInstances,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n    ]\n};\nconst DEFAULT_FIRESTORE_INSTANCE_PROVIDER = {\n    provide: Firestore,\n    useFactory: defaultFirestoreInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_FIRESTORE_INSTANCES],\n        FirebaseApp,\n    ]\n};\nclass FirestoreModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'fst');\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: FirestoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.6\", ngImport: i0, type: FirestoreModule });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: FirestoreModule, providers: [\n            DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n            FIRESTORE_INSTANCES_PROVIDER,\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.6\", ngImport: i0, type: FirestoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_FIRESTORE_INSTANCE_PROVIDER,\n                        FIRESTORE_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: () => [] });\nfunction provideFirestore(fn, ...deps) {\n    return {\n        ngModule: FirestoreModule,\n        providers: [{\n                provide: PROVIDED_FIRESTORE_INSTANCES,\n                useFactory: firestoreInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    // Firestore+Auth work better if Auth is loaded first\n                    [new Optional(), AuthInstances],\n                    [new Optional(), ɵAppCheckInstances],\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst collectionChanges = ɵzoneWrap(collectionChanges$1, true);\nconst collectionSnapshots = ɵzoneWrap(collection$1, true);\nconst sortedChanges = ɵzoneWrap(sortedChanges$1, true);\nconst auditTrail = ɵzoneWrap(auditTrail$1, true);\nconst collectionData = ɵzoneWrap(collectionData$1, true);\nconst collectionCountSnap = ɵzoneWrap(collectionCountSnap$1, true);\nconst collectionCount = ɵzoneWrap(collectionCount$1, true);\nconst docSnapshots = ɵzoneWrap(doc$1, true);\nconst docData = ɵzoneWrap(docData$1, true);\nconst snapToData = ɵzoneWrap(snapToData$1, true);\nconst fromRef = ɵzoneWrap(fromRef$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst addDoc = ɵzoneWrap(addDoc$1, true);\nconst aggregateFieldEqual = ɵzoneWrap(aggregateFieldEqual$1, true);\nconst aggregateQuerySnapshotEqual = ɵzoneWrap(aggregateQuerySnapshotEqual$1, true);\nconst and = ɵzoneWrap(and$1, true);\nconst arrayRemove = ɵzoneWrap(arrayRemove$1, true);\nconst arrayUnion = ɵzoneWrap(arrayUnion$1, true);\nconst average = ɵzoneWrap(average$1, true);\nconst clearIndexedDbPersistence = ɵzoneWrap(clearIndexedDbPersistence$1, true);\nconst collection = ɵzoneWrap(collection$2, true);\nconst collectionGroup = ɵzoneWrap(collectionGroup$1, true);\nconst connectFirestoreEmulator = ɵzoneWrap(connectFirestoreEmulator$1, true);\nconst count = ɵzoneWrap(count$1, true);\nconst deleteAllPersistentCacheIndexes = ɵzoneWrap(deleteAllPersistentCacheIndexes$1, true);\nconst deleteDoc = ɵzoneWrap(deleteDoc$1, true);\nconst deleteField = ɵzoneWrap(deleteField$1, true);\nconst disableNetwork = ɵzoneWrap(disableNetwork$1, true);\nconst disablePersistentCacheIndexAutoCreation = ɵzoneWrap(disablePersistentCacheIndexAutoCreation$1, true);\nconst doc = ɵzoneWrap(doc$2, true);\nconst documentId = ɵzoneWrap(documentId$1, true);\nconst enableIndexedDbPersistence = ɵzoneWrap(enableIndexedDbPersistence$1, true);\nconst enableMultiTabIndexedDbPersistence = ɵzoneWrap(enableMultiTabIndexedDbPersistence$1, true);\nconst enableNetwork = ɵzoneWrap(enableNetwork$1, true);\nconst enablePersistentCacheIndexAutoCreation = ɵzoneWrap(enablePersistentCacheIndexAutoCreation$1, true);\nconst endAt = ɵzoneWrap(endAt$1, true);\nconst endBefore = ɵzoneWrap(endBefore$1, true);\nconst getAggregateFromServer = ɵzoneWrap(getAggregateFromServer$1, true);\nconst getCountFromServer = ɵzoneWrap(getCountFromServer$1, true);\nconst getDoc = ɵzoneWrap(getDoc$1, true);\nconst getDocFromCache = ɵzoneWrap(getDocFromCache$1, true);\nconst getDocFromServer = ɵzoneWrap(getDocFromServer$1, true);\nconst getDocs = ɵzoneWrap(getDocs$1, true);\nconst getDocsFromCache = ɵzoneWrap(getDocsFromCache$1, true);\nconst getDocsFromServer = ɵzoneWrap(getDocsFromServer$1, true);\nconst getFirestore = ɵzoneWrap(getFirestore$1, true);\nconst getPersistentCacheIndexManager = ɵzoneWrap(getPersistentCacheIndexManager$1, true);\nconst increment = ɵzoneWrap(increment$1, true);\nconst initializeFirestore = ɵzoneWrap(initializeFirestore$1, true);\nconst limit = ɵzoneWrap(limit$1, true);\nconst limitToLast = ɵzoneWrap(limitToLast$1, true);\nconst loadBundle = ɵzoneWrap(loadBundle$1, true);\nconst memoryEagerGarbageCollector = ɵzoneWrap(memoryEagerGarbageCollector$1, true);\nconst memoryLocalCache = ɵzoneWrap(memoryLocalCache$1, true);\nconst memoryLruGarbageCollector = ɵzoneWrap(memoryLruGarbageCollector$1, true);\nconst namedQuery = ɵzoneWrap(namedQuery$1, true);\nconst onSnapshot = ɵzoneWrap(onSnapshot$1, true);\nconst onSnapshotsInSync = ɵzoneWrap(onSnapshotsInSync$1, true);\nconst or = ɵzoneWrap(or$1, true);\nconst orderBy = ɵzoneWrap(orderBy$1, true);\nconst persistentLocalCache = ɵzoneWrap(persistentLocalCache$1, true);\nconst persistentMultipleTabManager = ɵzoneWrap(persistentMultipleTabManager$1, true);\nconst persistentSingleTabManager = ɵzoneWrap(persistentSingleTabManager$1, true);\nconst query = ɵzoneWrap(query$1, true);\nconst queryEqual = ɵzoneWrap(queryEqual$1, true);\nconst refEqual = ɵzoneWrap(refEqual$1, true);\nconst runTransaction = ɵzoneWrap(runTransaction$1, true);\nconst serverTimestamp = ɵzoneWrap(serverTimestamp$1, true);\nconst setDoc = ɵzoneWrap(setDoc$1, true);\nconst setIndexConfiguration = ɵzoneWrap(setIndexConfiguration$1, true);\nconst setLogLevel = ɵzoneWrap(setLogLevel$1, true);\nconst snapshotEqual = ɵzoneWrap(snapshotEqual$1, true);\nconst startAfter = ɵzoneWrap(startAfter$1, true);\nconst startAt = ɵzoneWrap(startAt$1, true);\nconst sum = ɵzoneWrap(sum$1, true);\nconst terminate = ɵzoneWrap(terminate$1, true);\nconst updateDoc = ɵzoneWrap(updateDoc$1, true);\nconst waitForPendingWrites = ɵzoneWrap(waitForPendingWrites$1, true);\nconst where = ɵzoneWrap(where$1, true);\nconst writeBatch = ɵzoneWrap(writeBatch$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Firestore, FirestoreInstances, FirestoreModule, addDoc, aggregateFieldEqual, aggregateQuerySnapshotEqual, and, arrayRemove, arrayUnion, auditTrail, average, clearIndexedDbPersistence, collection, collectionChanges, collectionCount, collectionCountSnap, collectionData, collectionGroup, collectionSnapshots, connectFirestoreEmulator, count, deleteAllPersistentCacheIndexes, deleteDoc, deleteField, disableNetwork, disablePersistentCacheIndexAutoCreation, doc, docData, docSnapshots, documentId, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, enableNetwork, enablePersistentCacheIndexAutoCreation, endAt, endBefore, firestoreInstance$, fromRef, getAggregateFromServer, getCountFromServer, getDoc, getDocFromCache, getDocFromServer, getDocs, getDocsFromCache, getDocsFromServer, getFirestore, getPersistentCacheIndexManager, increment, initializeFirestore, limit, limitToLast, loadBundle, memoryEagerGarbageCollector, memoryLocalCache, memoryLruGarbageCollector, namedQuery, onSnapshot, onSnapshotsInSync, or, orderBy, persistentLocalCache, persistentMultipleTabManager, persistentSingleTabManager, provideFirestore, query, queryEqual, refEqual, runTransaction, serverTimestamp, setDoc, setIndexConfiguration, setLogLevel, snapToData, snapshotEqual, sortedChanges, startAfter, startAt, sum, terminate, updateDoc, waitForPendingWrites, where, writeBatch };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}